{
  "name": "multiparse",
  "version": "1.0.0",
  "description": "A module that can load multiple instances of the Parse Javascript SDK",
  "keywords": [
    "cloud",
    "mobile",
    "api"
  ],
  "main": "multiparse.js",
  "dependencies": {
    "parse": "*"
  },
  "author": {
    "name": "Ziad Saab",
    "email": "ziad.saab@gmail.com",
    "url": "http://www.github.com/ziad-saab/"
  },
  "readme": "multiparse\n==========\n\nThis module exports a fresh new instance of the Parse Javascript SDK on every call, overriding the default Singleton-like behaviour. It achieves this by clearing node's `require.cache` of the parse module on every call\n\n### Basic Usage\n```javascript\nvar multiparse = require('multiparse');\nvar parse_dev = multiparse().Parse;\nvar parse_prod = multiparse().Parse;\n\nparse_dev.initialize(DEV_APP_ID, DEV_JS_KEY);\nparse_prod.initialize(PROD_APP_ID, PROD_JS_KEY);\n```\n\n### Execute a server-side action on behalf of a logged-in user, without maintaining any state on the server\n```javascript\n// This requires that the request to the server contains the session token assigned by Parse on the client side, as well as the Parse user ID\n// For obvious reasons this should be done over a secure connection\nvar multiparse = require('multiparse');\n\nvar handler = function(request, response) {\n    var temporary_parse = multiparse().Parse;\n    temporary_parse.initialize(APP_ID, JS_KEY);\n\n    var user_id = request.params.parse_user_id;\n    var session_token = request.params.parse_session_token;\n    if (user_id && session_token) {\n        var User = Parse.Object.extend('_User');\n        var current_user = new User();\n        current_user.id = user_id;\n        current_user._sessionToken = session_token;\n        temporary_parse.User._currentUser = current_user;\n\n        // Use the temporary_parse instance as if you were the user in their browser\n    }\n    else {\n        // Send an error to the client\n    }\n}\n```",
  "readmeFilename": "README.md",
  "_id": "multiparse@1.0.0",
  "dist": {
    "shasum": "a6f5f7c2cf4a11cb2efa2963c3020909d3e911d1"
  },
  "_from": "multiparse@",
  "_resolved": "https://registry.npmjs.org/multiparse/-/multiparse-1.0.0.tgz"
}
